import type { marked } from "marked";
import type { ComponentType, ReactElement, ReactNode } from "react";
export interface TagRendererProps extends marked.Tokens.Tag {
    children: ReactNode;
}
/**
 * The default implementation for rendering the {@link Tokens.Tag} that will
 * render nothing.
 */
export declare function TagRenderer(_props: TagRendererProps): null;
export interface HtmlRendererProps extends marked.Tokens.HTML {
    children: ReactNode;
}
/**
 * The default implementation for rendering the {@link Tokens.HTML} that will
 * render nothing.
 */
export declare function HtmlRenderer(_props: HtmlRendererProps): null;
export declare type EscapeRendererProps = marked.Tokens.Escape;
/**
 * The default implementation for rendering the {@link Tokens.Escape} by
 * rendering:
 *
 * ```tsx
 * <>{text}</>
 * ```
 */
export declare function EscapeRenderer({ text }: EscapeRendererProps): ReactElement;
export interface HtmlRenderers {
    /** @see {@link TagRenderer} for default implementation */
    tag: ComponentType<TagRendererProps>;
    /** @see {@link HtmlRenderer} for default implementation */
    html: ComponentType<HtmlRendererProps>;
    /** @see {@link EscapeRenderer} for default implementation */
    escape: ComponentType<EscapeRendererProps>;
}
export declare const HTML_RENDERERS: HtmlRenderers;
