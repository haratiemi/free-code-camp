import { ReactElement, ReactNode } from "react";
import { CodeRenderers } from "./code";
import { HtmlRenderers } from "./html";
import { ListRenderers } from "./list";
import { MediaRenderers } from "./media";
import { PresentationRenderers } from "./presentational";
import { TableRenderers } from "./table";
import { TextRenderers } from "./text";
/**
 * @see {@link DEFAULT_MARKDOWN_RENDERERS} for the default implementation
 */
export interface MarkdownRenderers extends CodeRenderers, HtmlRenderers, ListRenderers, MediaRenderers, PresentationRenderers, TableRenderers, TextRenderers {
}
/**
 * The default implementation for the {@link MarkdownRenderers}
 *
 * @see {@link CODE_RENDERERS}
 * @see {@link HTML_RENDERERS}
 * @see {@link LIST_RENDERERS}
 * @see {@link MEDIA_RENDERERS}
 * @see {@link PRESENTATIONAL_RENDERERS}
 * @see {@link TABLE_RENDERERS}
 * @see {@link TEXT_RENDERERS}
 */
export declare const DEFAULT_MARKDOWN_RENDERERS: MarkdownRenderers;
/**
 * This hook is pretty much an internal hook since it is used for the
 * {@link TokenRenderer} component to render the tokens that `marked` has
 * parsed. This can be used externally, but it's probably easier just to just
 * import your components manually.
 *
 * @example
 * Simple Example
 * ```tsx
 * function CustomHtmlRenderer({ text, raw }: HtmlRendererProps): ReactElement | null {
 *   const renderers = useMarkdownRenderers();
 *   const { codeblock: CodeBlock } = renderers;
 *
 *   const rawCode = `\`\`\`html\n${raw}\n\`\`\``;
 *   return (
 *     <CodeBlock
 *       type="code"
 *       raw={rawCode}
 *       text={text}
 *       lang="html"
 *     >
 *       {text}
 *     </CodeBlock>
 *   );
 * }
 * ```
 *
 * @returns the current renderers for the {@link Markdown} component.
 */
export declare function useMarkdownRenderers(): Readonly<MarkdownRenderers>;
/** @internal */
export interface MarkdownRenderersProviderProps {
    children: ReactNode;
    renderers: Readonly<MarkdownRenderers>;
}
/** @internal */
export declare function MarkdownRenderersProvider({ children, renderers, }: MarkdownRenderersProviderProps): ReactElement;
